class Trie {
public:
    unordered_set<string> s;
    Trie() {
    }
    
    void insert(string word) {
        s.insert(word);
    }
    
    bool search(string word) {
        if(s.count(word))
            return true;
        else
            return false;
    }
    
    bool startsWith(string prev, string &prefix) {
        if(prev.size()<prefix.size())
            return false;

        for(int i=0;i<prefix.size();i++)
            if(prefix[i]!=prev[i])
                return false;
        return true;
    }

    bool startsWith(string prefix){
        for(auto it = s.begin();it!=s.end();it++){
            if(startsWith(*it, prefix))
                return true;
        }
        return false;
    }
};

/**
 * Your Trie object will be instantiated and called as such:
 * Trie* obj = new Trie();
 * obj->insert(word);
 * bool param_2 = obj->search(word);
 * bool param_3 = obj->startsWith(prefix);
 */
